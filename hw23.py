"""
3.	Сформировать из введенного числа обратное по порядку входящих в него
цифр и вывести на экран. Например, если введено число 3486,
 то надо вывести число 6843.
Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все цифры извлечены
Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ
Пример:
Введите число, которое требуется перевернуть: 123
Перевернутое число: 321
Не забудьте проверить и на числах, заканчивающихся нулем.
Пример:
Введите число, которое требуется перевернуть: 1230
Перевернутое число: 0321
Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""

def number_reverse(number):
    # продумать реверс с нулем тоже
    numeral = number % 10
    number = number // 10
    if number == 0:
        return str(numeral)
    else:
        return str(numeral) + str(number_reverse(number))

def number_reverse1(number):
    number, numeral = divmod(number, 10)
    if number == 0:
        return str(numeral)
    else:
        return str(numeral) + str(number_reverse(number))

def number_reverse2(number):
    # продумать реверс с нулем тоже
    numeral = number % 10
    number = number // 10
    if number == 0:
        print(str(numeral))
    else:
        print(str(numeral) + str(number_reverse(number)))

print(number_reverse1(1230))
print(number_reverse(123))
# а если использовать принт в первом варианте решения то он писал 1 2None 3None/зуб даю
number_reverse2(123)
# теперь оно работает....Ощущение что с ума схожу.